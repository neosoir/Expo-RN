# Usar Node.js versi√≥n 22 como imagen base
FROM node:22

# Cambiar a usuario root para instalar paquetes
USER root

# Actualizar el gestor de paquetes e instalar dependencias necesarias
RUN apt-get update && apt-get install -y \
    openjdk-17-jdk \
    wget \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Configurar variables de entorno para Java
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH=$PATH:$JAVA_HOME/bin

# Configurar variables de entorno para Android SDK
ENV ANDROID_HOME=/usr/local/android-sdk
ENV PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools

# Crear directorios necesarios para Android SDK
RUN mkdir -p $ANDROID_HOME/cmdline-tools && cd $ANDROID_HOME/cmdline-tools && \
    wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip && \
    unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools && \
    rm cmdline-tools.zip && \
    mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest

# Aceptar licencias y instalar componentes esenciales del SDK
RUN yes | sdkmanager --licenses && \
    sdkmanager --update && \
    sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"

# Cambiar al usuario node
USER node

# Establecer directorio de trabajo
WORKDIR /client

# Copiar los archivos del proyecto al contenedor
COPY --chown=node:node . /client

# Exponer los puertos necesarios
EXPOSE 3000 8081 19000 19001 19002 19006

